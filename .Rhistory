library(Glimma) # Interactive DEG visualization
library(EnhancedVolcano) # Pleasing volcano plots
# library(GO.db) # Gene ontology
# library(GOstats) # Gene ontology
# library(clusterProfiler) # over representation/gene enrichment
# Load CSV's for gene counts & metadata. Retain untidy names for ease
counts <- read.csv("Data/GSE183973_bulkRNA_gene_counts.csv",
check.names = FALSE
)
metadata <- read.csv("Data/GSE183973_metadata_samples.csv",
check.names = FALSE
)
metadata$patient_group <- factor(metadata$patient_group)
metadata$cell_type <- factor(metadata$cell_type)
# Define missing column names
colnames(counts)[1] <- "genes"
head(colnames(counts))
colnames(metadata)[1] <- "samples"
head(metadata)
# Set column index
row.names(counts) <- counts$genes
head(row.names(counts))
# Remove genes column (gene names retained as index)
# Assign to new df to retain genes column for later data exploration
geneCounts <- counts |>
select(-genes)
# Match counts column names and metadata row names
desired_order <- metadata$samples
geneCounts <- geneCounts[, desired_order]
# Confirm match
all(colnames(geneCounts) %in% metadata$samples)
all(colnames(geneCounts) == metadata$samples)
# Define design matrix for DESeq2
dds <- DESeqDataSetFromMatrix(
countData = geneCounts,
colData = metadata,
design = ~ cell_type + patient_group
)
dds
# remove low expressed genes
keep <- rowSums(counts(dds)) >= 10
dds <- dds[keep, ]
# set factor level (reference group)
dds$patient_group <- relevel(dds$patient_group, ref = "non_smoker")
# Run DEG analysis
dds <- DESeq(dds)
# lists the coefficients
resultsNames(dds)
res <- results(dds)
res
summary(res)
sum(res$padj < 0.1, na.rm = TRUE)
# Specify a different FDR cutoff (p-adj); default is 0.1
res05 <- results(dds, alpha = 0.05)
res05
summary(res05)
sum(res05$padj < 0.05, na.rm = TRUE)
# Compare DEG's across patient groups
# Non-Smoker vs Non-Smoker
resSmoker <- results(dds, contrast = c("patient_group", "smoker", "non_smoker"))
resSmoker
summary(resSmoker)
sum(resSmoker$padj < 0.1, na.rm = TRUE)
# COPD vs Non-Smoker
resCOPD <- results(dds, contrast = c("patient_group", "copd", "non_smoker"))
resCOPD
summary(resCOPD)
sum(resCOPD$padj < 0.1, na.rm = TRUE)
# COPD vs Smoker
resWild <- results(dds, contrast = c("patient_group", "copd", "smoker"))
resWild
summary(resWild)
sum(resWild$padj < 0.1, na.rm = TRUE)
# For visualization and gene ranking, shrink log fold changes of a condition (shrink effect size)
# Adaptive t prior shrinkage estimator
resLFC <- lfcShrink(dds,
coef = "patient_group_smoker_vs_non_smoker",
type = "apeglm"
)
# Original DESeq2 shrinkage estimator, an adaptive Normal distribution as prior.
resNorm <- lfcShrink(dds,
coef = "patient_group_smoker_vs_non_smoker",
type = "normal"
)
# Adaptive shrinkage estimator. Fits a mixture of Normal distributions to form the prior
resAsh <- lfcShrink(dds,
coef = "patient_group_smoker_vs_non_smoker",
type = "ashr"
)
# Plot log fold shrunked DEG's
p1 <- plotMA(resLFC, main="apeglm", returnData=TRUE)
p1_plot <- ggplot(p1, aes(x=mean, y=lfc, color=isDE)) +
geom_point() +
scale_x_continuous(trans='log10') +
labs(title = "apeglm")
p2 <- plotMA(resNorm, main="normal", returnData=TRUE)
p2_plot <- ggplot(p2, aes(x=mean, y=lfc, color=isDE)) +
geom_point() +
scale_x_continuous(trans='log10') +
labs(title = "normal")
p3 <- plotMA(resAsh, main="ashr", returnData=TRUE)
p3_plot <- ggplot(p3, aes(x=mean, y=lfc, color=isDE)) +
geom_point() +
scale_x_continuous(trans='log10') +
labs(title = "ashr")
gridExtra::grid.arrange(p1_plot, p2_plot, p3_plot, nrow=1)
# Visualize log2 fold changes of a given variable over the mean of normalized counts for all samples
plotMA(res, ylim = c(-2, 2), main = "res padj < 0.1")
plotMA(res05, ylim = c(-2, 2), main = "res padj < 0.05")
plotMA(resLFC, ylim = c(-2, 2), main = "res Shruken effect size")
plotMA(resSmoker, ylim = c(-2, 2), main = "Smoker vs Non Smoker")
plotMA(resCOPD, ylim = c(-2, 2), main = "COPD vs Non Smoker")
plotMA(resWild, ylim = c(-2, 2), main = "COPD vs Smoker")
# # to interactively select genes from MA plot (run outside of Rmarkdown chunk; in console)
# plotMA(resLFC, ylim=c(-2,2), main = "res Shruken effect size")
#
# idx <- identify(res$baseMean, res$log2FoldChange)
#
# rownames(res)[idx]
# Plot the gene with the smallest p value across specified groupings
c1 <- plotCounts(dds, gene=which.min(res$padj), intgroup=c("cell_type"), returnData=TRUE)
c1_plot <- ggplot(c1, aes(x=cell_type, y=count)) +
geom_point(position=position_jitter(w=0.1,h=0)) +
scale_y_log10(breaks=c(25,100,400))
c2 <- plotCounts(dds, gene=which.min(res$padj), intgroup=c("patient_group"), returnData=TRUE)
c2_plot <- ggplot(c2, aes(x=patient_group, y=count)) +
geom_point(position=position_jitter(w=0.1,h=0)) +
scale_y_log10(breaks=c(25,100,400))
c3 <- plotCounts(dds, gene=which.min(res$padj), intgroup=c("cell_type", "patient_group"), returnData=TRUE)
c3_plot <- ggplot(c3, aes(x=patient_group, y=count, color=cell_type)) +
geom_point(position=position_jitter(w=0.1,h=0)) +
scale_y_log10(breaks=c(25,100,400))
gridExtra::grid.arrange(c1_plot, c2_plot, c3_plot, nrow=1)
# order results by pvalue
resOrdered <- res[order(res$pvalue), ]
resOrdered
summary(resOrdered)
resOrdered05 <- subset(resOrdered, padj < 0.05)
resOrdered05
# write.csv(as.data.frame(resOrdered05), file="Smoker_NonSmoker_results_padj05.csv")
# Variance stabilizing transformation. (log2 scaling for large counts)
vsd <- vst(dds, blind = FALSE)
rld <- rlog(dds, blind = FALSE)
ntd <- normTransform(dds)
meanSdPlot(assay(ntd))
meanSdPlot(assay(vsd))
meanSdPlot(assay(rld))
select <- order(rowMeans(counts(dds, normalized = TRUE)),
decreasing = TRUE
)[1:20]
df <- as.data.frame(colData(dds)[, c("patient_group", "cell_type")])
pheatmap(assay(ntd)[select, ],
cluster_rows = FALSE, show_rownames = FALSE,
cluster_cols = FALSE, annotation_col = df
)
pheatmap(assay(vsd)[select, ],
cluster_rows = FALSE, show_rownames = FALSE,
cluster_cols = FALSE, annotation_col = df
)
pheatmap(assay(rld)[select, ],
cluster_rows = FALSE, show_rownames = FALSE,
cluster_cols = FALSE, annotation_col = df
)
#
sampleDists <- dist(t(assay(vsd)))
sampleDistMatrix <- as.matrix(sampleDists)
rownames(sampleDistMatrix) <- paste(vsd$cell_type, vsd$patient_group, sep = "-")
colnames(sampleDistMatrix) <- NULL
colors <- colorRampPalette(rev(brewer.pal(9, "Blues")))(255)
pheatmap(sampleDistMatrix,
clustering_distance_rows = sampleDists,
clustering_distance_cols = sampleDists,
col = colors
)
plotPCA(vsd, intgroup = c("cell_type", "patient_group"))
plotPCA(vsd, intgroup = c("cell_type"))
pcaData <- plotPCA(vsd,
intgroup = c("cell_type", "patient_group"),
returnData = TRUE
)
percentVar <- round(100 * attr(pcaData, "percentVar"))
ggplot(pcaData, aes(PC1, PC2, color = patient_group, shape = cell_type)) +
geom_point(size = 3) +
xlab(paste0("PC1: ", percentVar[1], "% variance")) +
ylab(paste0("PC2: ", percentVar[2], "% variance")) +
coord_fixed()
# Pivot DF for exploratory data analysis
countsLong <- counts |>
pivot_longer(cols = !genes, names_to = "samples", values_to = "counts")
head(countsLong)
# Annotate counts with metadata
counts <- countsLong |>
left_join(metadata, by = c("samples" = "samples"))
head(counts)
plotMA(res)
EnhancedVolcano(res,
lab = rownames(res),
x = "log2FoldChange",
y = "pvalue",
title = "Smoker vs Non-smoker",
pCutoff = 1e-05,
FCcutoff = 0.5,
pointSize = 2,
labSize = 6.0,
colAlpha = 0.3
)
# plot chosen genes per chosen conditions
plotCounts(dds, gene = which.min(res$padj), intgroup = "patient_group")
plotCounts(dds, gene = which.min(res$padj), intgroup = c("patient_group", "cell_type"))
plotCounts(dds, gene = "CD101", intgroup = "patient_group")
p <- plotCounts(dds,
gene = which.min(res$padj),
intgroup = c("patient_group", "cell_type"),
returnData = TRUE
)
ggplot(p, aes(x = patient_group, y = count, color = cell_type)) +
geom_point(position = position_jitter(w = 0.1, h = 0), size = 3) +
scale_y_log10(breaks = c(25, 100, 400))
# resSmall <- results(dds, alpha = 0.01)
# summary(resSmall)
# Extract differentially expressed genes
DE_genes <- subset(res, padj < 0.01)
summary(DE_genes)
DEG <- DE_genes@rownames
plotMA(DE_genes)
counts |>
filter(genes %in% DEG) |>
ggplot(aes(x = samples, y = genes, fill = counts)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "red") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
sessionInfo()
p3_plot <- ggplot(p3, aes(x=mean, y=lfc, color=isDE)) +
geom_point() +
scale_x_continuous(trans='log10') +
ylim(lower_bound, upper_bound) +
labs(title = "ashr")
p3_plot <- ggplot(p3, aes(x=mean, y=lfc, color=isDE)) +
geom_point() +
scale_x_continuous(trans='log10') +
ylim(-2, 2) +
labs(title = "ashr")
p3 <- plotMA(resAsh, main="ashr", returnData=TRUE)
p3_plot <- ggplot(p3, aes(x=mean, y=lfc, color=isDE)) +
geom_point() +
scale_x_continuous(trans='log10') +
ylim(-2, 2) +
labs(title = "ashr")
gridExtra::grid.arrange(p1_plot, p2_plot, p3_plot, nrow=1)
p1 <- plotMA(resLFC, main="apeglm", returnData=TRUE)
p1_plot <- ggplot(p1, aes(x=mean, y=lfc, color=isDE)) +
geom_point() +
scale_x_continuous(trans='log10') +
ylim(-2, 2) +
labs(title = "apeglm")
p2 <- plotMA(resNorm, main="normal", returnData=TRUE)
p2_plot <- ggplot(p2, aes(x=mean, y=lfc, color=isDE)) +
geom_point() +
scale_x_continuous(trans='log10') +
ylim(-2, 2) +
labs(title = "normal")
p3 <- plotMA(resAsh, main="ashr", returnData=TRUE)
p3_plot <- ggplot(p3, aes(x=mean, y=lfc, color=isDE)) +
geom_point() +
scale_x_continuous(trans='log10') +
ylim(-2, 2) +
labs(title = "ashr")
gridExtra::grid.arrange(p1_plot, p2_plot, p3_plot, nrow=1)
gridExtra::grid.arrange(p1_plot, p2_plot, p3_plot, nrow=3)
gridExtra::grid.arrange(p1_plot, p2_plot, p3_plot, nrow=2)
# lists the coefficients
resultsNames(dds)
# Specifying a strict FDR cutoff (p-adj); default is 0.1
res05 <- results(dds, alpha = 0.05)
res05
summary(res05)
sum(res05$padj < 0.05, na.rm = TRUE)
# COPD vs Non-Smoker
resCOPD <- results(dds, contrast = c("patient_group", "copd", "non_smoker"))
resCOPD
summary(resCOPD)
sum(resCOPD$padj < 0.1, na.rm = TRUE)
# COPD vs Smoker
resWild <- results(dds, contrast = c("patient_group", "copd", "smoker"))
resWild
resCOPD
summary(resCOPD)
sum(resCOPD$padj < 0.1, na.rm = TRUE)
sum(resCOPD$padj < 0.05, na.rm = TRUE)
sum(resWild$padj < 0.05, na.rm = TRUE)
resCOPD
summary(resCOPD)
summary(res05)
# COPD vs Non-Smoker
resCOPD <- results(dds, alpha = 0.05, contrast = c("patient_group", "copd", "non_smoker"))
resCOPD
summary(resCOPD)
sum(resCOPD$padj < 0.05, na.rm = TRUE)
# COPD vs Smoker
resWild <- results(dds, alpha = 0.05, contrast = c("patient_group", "copd", "smoker"))
resWild
summary(resWild)
sum(resWild$padj < 0.05, na.rm = TRUE)
There are `format(sum(res05$padj < 0.05, na.rm = TRUE))` DEG's between Smoker & Non-Smoker
There are $`format(sum(res05, na.rm = TRUE))`$ DEG's between Smoker & Non-Smoker groups;
format(sum(res05, na.rm = TRUE))
format(sum(res05$padj < 0.05, na.rm = TRUE))
format(sum(res05$padj < 0.05)
)
sum(res05$padj < 0.05, na.rm = TRUE)
# Visualize log2 fold changes of a given variable over the mean of normalized counts for all samples
p01 <- plotMA(res, ylim = c(-2, 2), main = "res padj < 0.1", returnData=TRUE)
View(p01)
# Visualize log2 fold changes of a given variable over the mean of normalized counts for all samples
p01 <- plotMA(res, ylim = c(-2, 2), main = "res padj < 0.1", returnData=TRUE)
p01_plot <- ggplot(p01, aes(x=mean, y=lfc, color=isDE)) +
geom_point() +
scale_x_continuous(trans='log10') +
ylim(-2, 2) +
labs(title = "ashr")
ggplot(p01, aes(x=mean, y=lfc, color=isDE)) +
geom_point() +
scale_x_continuous(trans='log10') +
ylim(-2, 2) +
labs(title = "ashr")
ggplot(p01, aes(x=mean, y=lfc, color=isDE)) +
geom_point(alpha = 0.5) +
scale_x_continuous(trans='log10') +
ylim(-2, 2) +
labs(title = "ashr")
p01_plot <- ggplot(p01, aes(x=mean, y=lfc, color=isDE)) +
geom_point(alpha = 0.8) +
scale_x_continuous(trans='log10') +
ylim(-2, 2) +
labs(title = "ashr")
ggplot(p01, aes(x=mean, y=lfc, color=isDE)) +
geom_point(alpha = 0.8) +
scale_x_continuous(trans='log10') +
ylim(-2, 2) +
labs(title = "ashr")
ggplot(p01, aes(x=mean, y=lfc, color=isDE)) +
geom_point(alpha = 0.3) +
scale_x_continuous(trans='log10') +
ylim(-2, 2) +
labs(title = "ashr")
ggplot(p01, aes(x = mean, y = lfc, color = isDE)) +
geom_point(aes(alpha = ifelse(isDE == "Variable1", 0.3, 1)), show.legend = FALSE) +
scale_x_continuous(trans = 'log10') +
ylim(-2, 2) +
labs(title = "ashr") +
guides(alpha = guide_legend(override.aes = list(alpha = c(0.3, 1))))
ggplot(p01, aes(x = mean, y = lfc, color = isDE)) +
geom_point(aes(alpha = ifelse(isDE == "Variable1", 0.3, 1)), show.legend = FALSE) +
scale_x_continuous(trans = 'log10') +
ylim(-2, 2) +
labs(title = "ashr") +
guides(alpha = guide_legend(override.aes = list(alpha = c(0.1, 1))))
ggplot(p01, aes(x = mean, y = lfc, color = isDE)) +
geom_point(aes(alpha = ifelse(isDE == "Variable1", 0.1, 1)), show.legend = FALSE) +
scale_x_continuous(trans = 'log10') +
ylim(-2, 2) +
labs(title = "ashr") +
guides(alpha = guide_legend(override.aes = list(alpha = c(0.1, 1))))
ggplot(p01, aes(x = mean, y = lfc, color = isDE)) +
geom_point(aes(alpha = ifelse(isDE == "TRUE", 0.1, 1)), show.legend = FALSE) +
scale_x_continuous(trans = 'log10') +
ylim(-2, 2) +
labs(title = "ashr") +
guides(alpha = guide_legend(override.aes = list(alpha = c(0.1, 1))))
ggplot(p01, aes(x = mean, y = lfc, color = isDE)) +
geom_point(aes(alpha = ifelse(isDE == "TRUE", 1, 0.1)), show.legend = FALSE) +
scale_x_continuous(trans = 'log10') +
ylim(-2, 2) +
labs(title = "ashr") +
guides(alpha = guide_legend(override.aes = list(alpha = c(0.1, 1))))
ggplot(p01, aes(x = mean, y = lfc, color = isDE)) +
geom_point(aes(alpha = ifelse(isDE == "TRUE", 1, 0.1)), show.legend = FALSE) +
scale_x_continuous(trans = 'log10') +
ylim(-2, 2) +
labs(title = "ashr")
ggplot(p01, aes(x = mean, y = lfc, color = isDE)) +
geom_point(aes(alpha = ifelse(isDE == "TRUE", 1, 0.1)), show.legend = FALSE) +
scale_x_continuous(trans = 'log10') +
ylim(-2, 2) +
labs(title = "ashr") +
guides(alpha = guide_legend(override.aes = list(alpha = c(0.1, 1))))
gridExtra::grid.arrange(p01_plot, p005_plot, nrow=1)
p005_plot <- ggplot(p005, aes(x = mean, y = lfc, color = isDE)) +
geom_point(aes(alpha = ifelse(isDE == "TRUE", 1, 0.1)), show.legend = FALSE) +
scale_x_continuous(trans = 'log10') +
ylim(-2, 2) +
labs(title = "Strict res (padj=0.05)")
p005 <- plotMA(res05, ylim = c(-2, 2), main = "res padj < 0.05", returnData=TRUE)
p005_plot <- ggplot(p005, aes(x = mean, y = lfc, color = isDE)) +
geom_point(aes(alpha = ifelse(isDE == "TRUE", 1, 0.1)), show.legend = FALSE) +
scale_x_continuous(trans = 'log10') +
ylim(-2, 2) +
labs(title = "Strict res (padj=0.05)")
gridExtra::grid.arrange(p01_plot, p005_plot, nrow=1)
# Visualize log2 fold changes of a given variable over the mean of normalized counts for all samples
p01 <- plotMA(res, ylim = c(-2, 2), main = "res padj < 0.1", returnData=TRUE)
p01_plot <- ggplot(p01, aes(x = mean, y = lfc, color = isDE)) +
geom_point(aes(alpha = ifelse(isDE == "TRUE", 1, 0.1)), show.legend = FALSE) +
scale_x_continuous(trans = 'log10') +
ylim(-2, 2) +
labs(title = "Default res (padj=0.1)")
p005 <- plotMA(res05, ylim = c(-2, 2), main = "res padj < 0.05", returnData=TRUE)
p005_plot <- ggplot(p005, aes(x = mean, y = lfc, color = isDE)) +
geom_point(aes(alpha = ifelse(isDE == "TRUE", 1, 0.1)), show.legend = FALSE) +
scale_x_continuous(trans = 'log10') +
ylim(-2, 2) +
labs(title = "Strict res (padj=0.05)")
gridExtra::grid.arrange(p01_plot, p005_plot, nrow=1)
res <- results(dds)
# Visualize log2 fold changes of a given variable over the mean of normalized counts for all samples
p01 <- plotMA(res, ylim = c(-2, 2), main = "res padj < 0.1", returnData=TRUE)
p01_plot <- ggplot(p01, aes(x = mean, y = lfc, color = isDE)) +
geom_point(aes(alpha = ifelse(isDE == "TRUE", 1, 0.1)), show.legend = FALSE) +
scale_x_continuous(trans = 'log10') +
ylim(-2, 2) +
labs(title = "Default res (padj=0.1)")
p005 <- plotMA(res05, ylim = c(-2, 2), main = "res padj < 0.05", returnData=TRUE)
p005_plot <- ggplot(p005, aes(x = mean, y = lfc, color = isDE)) +
geom_point(aes(alpha = ifelse(isDE == "TRUE", 1, 0.1)), show.legend = FALSE) +
scale_x_continuous(trans = 'log10') +
ylim(-2, 2) +
labs(title = "Strict res (padj=0.05)")
plotMA(resLFC, ylim = c(-2, 2), main = "res Shruken effect size", returnData=TRUE)
pLFC <- plotMA(resLFC, ylim = c(-2, 2), main = "res padj < 0.05", returnData=TRUE)
pLFC_plot <- ggplot(pLFC, aes(x = mean, y = lfc, color = isDE)) +
geom_point(aes(alpha = ifelse(isDE == "TRUE", 1, 0.1)), show.legend = FALSE) +
scale_x_continuous(trans = 'log10') +
ylim(-2, 2) +
labs(title = "Strict res (padj=0.05)")
gridExtra::grid.arrange(p01_plot, p005_plot, pLFC_plot, nrow=2)
pLFC_plot <- ggplot(pLFC, aes(x = mean, y = lfc, color = isDE)) +
geom_point(aes(alpha = ifelse(isDE == "TRUE", 1, 0.1)), show.legend = FALSE) +
scale_x_continuous(trans = 'log10') +
ylim(-2, 2) +
labs(title = "Log fold shrunk (padj=0.1)")
gridExtra::grid.arrange(p01_plot, p005_plot, pLFC_plot, nrow=2)
View(pLFC)
pCOPD <- plotMA(resCOPD, ylim = c(-2, 2), main = "COPD vs Non Smoker", returnData=TRUE)
pCOPD_plot <- ggplot(pCOPD, aes(x = mean, y = lfc, color = isDE)) +
geom_point(aes(alpha = ifelse(isDE == "TRUE", 1, 0.1)), show.legend = FALSE) +
scale_x_continuous(trans = 'log10') +
ylim(-2, 2) +
labs(title = "COPD v Non Smoker DEG's")
pWild <- plotMA(resWild, ylim = c(-2, 2), main = "COPD vs Smoker", returnData=TRUE)
pCOPD_plot <- ggplot(pWild, aes(x = mean, y = lfc, color = isDE)) +
geom_point(aes(alpha = ifelse(isDE == "TRUE", 1, 0.1)), show.legend = FALSE) +
scale_x_continuous(trans = 'log10') +
ylim(-2, 2) +
labs(title = "COPD v Smoker DEG's")
gridExtra::grid.arrange(pCOPD_plot, pCOPD_plot, nrow=1)
# # to interactively select genes from MA plot (run outside of Rmarkdown chunk; in console)
# plotMA(resLFC, ylim=c(-2,2), main = "res Shruken effect size")
#
# idx <- identify(res$baseMean, res$log2FoldChange)
#
# rownames(res)[idx]
pCOPD <- plotMA(resCOPD, ylim = c(-2, 2), main = "COPD vs Non Smoker", returnData=TRUE)
pCOPD_plot <- ggplot(pCOPD, aes(x = mean, y = lfc, color = isDE)) +
geom_point(aes(alpha = ifelse(isDE == "TRUE", 1, 0.1)), show.legend = FALSE) +
scale_x_continuous(trans = 'log10') +
ylim(-2, 2) +
labs(title = "COPD v Non Smoker DEG's")
pWild <- plotMA(resWild, ylim = c(-2, 2), main = "COPD vs Smoker", returnData=TRUE)
pCOPD_plot <- ggplot(pWild, aes(x = mean, y = lfc, color = isDE)) +
geom_point(aes(alpha = ifelse(isDE == "TRUE", 1, 0.1)), show.legend = FALSE) +
scale_x_continuous(trans = 'log10') +
ylim(-2, 2) +
labs(title = "COPD v Smoker DEG's")
pCOPD <- plotMA(resCOPD, ylim = c(-2, 2), main = "COPD vs Non Smoker", returnData=TRUE)
pCOPD_plot <- ggplot(pCOPD, aes(x = mean, y = lfc, color = isDE)) +
geom_point(aes(alpha = ifelse(isDE == "TRUE", 1, 0.1)), show.legend = FALSE) +
scale_x_continuous(trans = 'log10') +
ylim(-2, 2) +
labs(title = "COPD v Non Smoker DEG's")
pWild <- plotMA(resWild, ylim = c(-2, 2), main = "COPD vs Smoker", returnData=TRUE)
pWild_plot <- ggplot(pWild, aes(x = mean, y = lfc, color = isDE)) +
geom_point(aes(alpha = ifelse(isDE == "TRUE", 1, 0.1)), show.legend = FALSE) +
scale_x_continuous(trans = 'log10') +
ylim(-2, 2) +
labs(title = "COPD v Smoker DEG's")
gridExtra::grid.arrange(pCOPD_plot, pWild_plot, nrow=1)
pDef <- plotMA(res, ylim = c(-2, 2), main = "COPD vs Non Smoker", returnData=TRUE)
pDef_plot <- ggplot(pDef, aes(x = mean, y = lfc, color = isDE)) +
geom_point(aes(alpha = ifelse(isDE == "TRUE", 1, 0.1)), show.legend = FALSE) +
scale_x_continuous(trans = 'log10') +
ylim(-2, 2) +
labs(title = "Smoker vs Non_Smoker DEG's")
pCOPD <- plotMA(resCOPD, ylim = c(-2, 2), main = "COPD vs Non_Smoker", returnData=TRUE)
pCOPD_plot <- ggplot(pCOPD, aes(x = mean, y = lfc, color = isDE)) +
geom_point(aes(alpha = ifelse(isDE == "TRUE", 1, 0.1)), show.legend = FALSE) +
scale_x_continuous(trans = 'log10') +
ylim(-2, 2) +
labs(title = "COPD v Non Smoker DEG's")
pWild <- plotMA(resWild, ylim = c(-2, 2), main = "COPD vs Smoker", returnData=TRUE)
pWild_plot <- ggplot(pWild, aes(x = mean, y = lfc, color = isDE)) +
geom_point(aes(alpha = ifelse(isDE == "TRUE", 1, 0.1)), show.legend = FALSE) +
scale_x_continuous(trans = 'log10') +
ylim(-2, 2) +
labs(title = "COPD v Smoker DEG's")
gridExtra::grid.arrange(pDef_plot, pCOPD_plot, pWild_plot, nrow=1)
# # to interactively select genes from MA plot (run outside of Rmarkdown chunk; in console)
# plotMA(resLFC, ylim=c(-2,2), main = "res Shruken effect size")
#
# idx <- identify(res$baseMean, res$log2FoldChange)
#
# rownames(res)[idx]
gridExtra::grid.arrange(pDef_plot, pCOPD_plot, pWild_plot, nrow=2)
